/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package itson.biblioteca.musical.gui;

import itson.biblioteca.musical.modelo.*;
import itson.biblioteca.musical.persistencia.AlbumDAO;
import itson.biblioteca.musical.persistencia.ArtistaDAO;
import itson.biblioteca.musical.persistencia.CancionDAO;
import java.util.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Felix_isq
 */
public class InsertarArtistasForm extends javax.swing.JFrame {

    /**
     * Creates new form InsertarArtistasForm
     */
    public InsertarArtistasForm() {
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnInsertarArtistas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Insertar Artistas de Prueba");

        btnInsertarArtistas.setText("Insertar Masivamente");
        btnInsertarArtistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarArtistasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInsertarArtistas)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1)
                .addGap(94, 94, 94)
                .addComponent(btnInsertarArtistas)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertarArtistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarArtistasActionPerformed
        // TODO add your handling code here:
        ArtistaDAO dao = new ArtistaDAO();
        AlbumDAO albumDAO = new AlbumDAO();
        CancionDAO cancionDAO = new CancionDAO();

        // Insertar 15 solistas
        for (int i = 1; i <= 15; i++) {
            Solista s = new Solista("Solista " + i, "Pop", "solista" + i + ".jpg");
            dao.insertarArtista(s);
        }

        // Insertar 15 bandas
        for (int i = 1; i <= 15; i++) {
            List<IntegranteBanda> integrantes = new ArrayList<>();
            integrantes.add(new IntegranteBanda("Miembro " + i + "A", "Guitarrista", "2020-01-01", null, true));
            integrantes.add(new IntegranteBanda("Miembro " + i + "B", "Baterista", "2021-06-01", null, true));

            Banda b = new Banda("Banda " + i, "Rock", "banda" + i + ".jpg", integrantes);
            dao.insertarArtista(b);
        }
        // Insertar álbumes y canciones para cada artista
        for (int i = 1; i <= 30; i++) {
            String nombre = (i <= 15) ? "Solista " + i : "Banda " + (i - 15);
            String artistaId = dao.obtenerIdArtistaPorNombre(nombre);
            if (artistaId != null) {
                for (int j = 1; j <= 2; j++) {
                    String nombreAlbum = "Álbum " + j + " de " + nombre;
                    Album album = new Album(
                            nombreAlbum,
                            "2022-01-" + (j + 10),
                            "Pop",
                            "album" + i + "_" + j + ".jpg",
                            artistaId,
                            List.of("Canción A", "Canción B", "Canción C")
                    );
                    albumDAO.insertarAlbum(album);

                    // Insertar canciones individuales
                    String albumId = albumDAO.obtenerIdAlbumPorNombre(nombreAlbum);
                    if (albumId != null) {
                        cancionDAO.insertarCancion(new Cancion("Canción 1", "3:10", albumId));
                        cancionDAO.insertarCancion(new Cancion("Canción 2", "2:55", albumId));
                        cancionDAO.insertarCancion(new Cancion("Canción 3", "4:05", albumId));
                    }
                }
            }
        }

        JOptionPane.showMessageDialog(this, "30 artistas insertados en MongoDB.");
    }//GEN-LAST:event_btnInsertarArtistasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertarArtistasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertarArtistasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertarArtistasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertarArtistasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new InsertarArtistasForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInsertarArtistas;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
